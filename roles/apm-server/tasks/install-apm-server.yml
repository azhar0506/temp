###
# Prepare base
##
- name: Import secrets
  include_vars: "inventories/{{ deployment_environment }}/group_vars/apm_server_nodes/secrets.yml"
  no_log:       true

- name: Make directory for project
  file:
    path: "{{ apm_server_dir }}"
    owner: "{{ apm_server_user }}"
    group: "{{ apm_server_group }}"
    state: directory
    mode: "0755"
  become: "{{ become_root }}"

- name: Is config dirtectory exists?
  stat:
    path: "{{ apm_server_dir }}/config"
  register: is_config_dir

- name: Change config directory ownership
  file:
    path: "{{ apm_server_dir }}/config"
    owner: "{{ apm_server_user }}"
    group: "{{ apm_server_group }}"
    state: directory
  when: is_config_dir.stat.exists
  become: "{{ become_root }}"
###


###
# Install APM-server
##
- name: Sync docker project to remote machine
  synchronize:
    src: files/apm-server-docker/
    dest: "{{ apm_server_dir }}"
    recursive: yes
    rsync_path: "/usr/bin/rsync"
    use_ssh_args: yes
    perms: no
  become: "{{ become_root }}"

- name: Removing config_example
  file:
    path: "{{ apm_server_dir }}/config_example"
    state: absent

- name: Remove .env.example
  file:
    path: "{{ apm_server_dir }}/.env.example"
    state: absent

- name: Bring .env into project folder
  template:
    src: templates/.env.j2
    dest: "{{ apm_server_dir }}/.env"
    owner: "{{ apm_server_user }}"
    group: "{{ apm_server_group }}"
    mode: "0744"

- name: Bring APM-Server docker-compose.yml file
  template:
    src:   templates/docker-compose.yml.j2
    dest:  "{{ apm_server_dir }}/docker-compose.yml"
    owner: "{{ apm_server_user }}"
    group: "{{ apm_server_group }}"
    mode:  "0744"
  become: "{{ become_root }}"

- name: Bring APM server configuration yml file
  template:
    src: templates/apm-server.yml.j2
    dest: "{{ apm_server_dir }}/config/apm-server.yml"
    owner: root
    group: root
    mode: "0755"
  become: "{{ become_root }}"
###
