####
## Prepare base
###
- name: Import secrets
  include_vars: "inventories/{{ deployment_environment }}/group_vars/logstash_nodes/secrets.yml"
  no_log:       true

- name: Make directory for project
  file:
    path: "{{ logstash_dir }}"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory
    mode: "0755"
  become: "{{ become_root }}"

- name: Does config dirtectory exist?
  stat:
    path: "{{ logstash_dir }}/config"
  register: is_config_dir

- name: Does pipeline dirtectory exist?
  stat:
    path: "{{ logstash_dir }}/pipeline"
  register: is_pipeline_dir

- name: Does data dirtectory exist?
  stat:
    path: "{{ logstash_dir }}/data"
  register: is_data_dir

- name: Change config directory ownership
  file:
    path: "{{ logstash_dir }}/config"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory
    mode: "0755"
  when: is_config_dir.stat.exists
  become: "{{ become_root }}"

- name: Change pipeline directory ownership
  file:
    path: "{{ logstash_dir }}/pipeline"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory
    mode: "0755"
  when: is_pipeline_dir.stat.exists
  become: "{{ become_root }}"

- name: Change data directory ownership
  file:
    path: "{{ logstash_dir }}/data"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory
  when: is_data_dir.stat.exists
  become: "{{ become_root }}"
####


####
## Install Logstash
###
- name: Sync docker project to remote machine
  synchronize:
    src: files/logstash-docker/
    dest: "{{ logstash_dir }}"
    recursive: yes
    rsync_path: "/usr/bin/rsync"
    use_ssh_args: yes
  become: "{{ become_root }}"

- name: Removing config_example
  file:
    path: "{{ logstash_dir }}/config_example"
    state: absent

- name: Removing pipeline_example
  file:
    path: "{{ logstash_dir }}/pipelines_example"
    state: absent

- name: Removing pipeline_example
  file:
    path: "{{ logstash_dir }}/pipelines"
    state: absent

- name: Remove .env.example
  file:
    path: "{{ logstash_dir }}/.env.example"
    state: absent

- name: Bring .env into root folder
  template:
    src: templates/.env.j2
    dest: "{{ logstash_dir }}/.env"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: "0744"

- name: Bring Logstash docker-compose.yml file
  template:
    src:   templates/docker-compose.yml.j2
    dest:  "{{ logstash_dir }}/docker-compose.yml"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode:  "0755"
  become: "{{ become_root }}"

- name: Bring krb5.conf into config folder
  template:
    src: templates/krb5.conf.j2
    dest: "{{ logstash_dir }}/config/krb5.conf"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: "0744"

- name: Bring updated jvm.options into config folder
  template:
    src: templates/jvm.options.j2
    dest: "{{ logstash_dir }}/config/jvm.options"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: "0755"

- name: Bring logstash.yml into config folder
  template:
    src: templates/logstash.yml.j2
    dest: "{{ logstash_dir }}/config/logstash.yml"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: "0755"

- name: Bring logstash_jaas.conf into config folder
  template:
    src: templates/logstash_jaas.conf.j2
    dest: "{{ logstash_dir }}/config/logstash_jaas.conf"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: "0755"

- name: We are delivering 3 pipeline files per cluster, but only one is needed (Tinsley cluster deployment)
  command: "mv {{ logstash_dir }}/config/pipelines_tinsley_{{ deployment_environment }}_cluster.yml {{ logstash_dir }}/config/pipelines.yml"
  when: logstash_cluster_location == "tinsley"

- name: We are delivering 3 pipeline files per cluster, but only one is needed (Reigate cluster deployment)
  command: "mv {{ logstash_dir }}/config/pipelines_reigate_{{ deployment_environment }}_cluster.yml {{ logstash_dir }}/config/pipelines.yml"
  when: logstash_cluster_location == "reigate"

- name: Find redundant pipeline files from `config` directory
  find:
    paths: "{{ logstash_dir }}/config"
    patterns: "*_cluster.yml"
  register: files_to_delete

- name: Remove redundant pipeline files from `config` directory
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
####


####
## Custom scripts
###
- name: Move files out of `extras` into `pipelines`
  copy:
    src:        "{{ logstash_dir }}/extras/"
    dest:       "{{ logstash_dir }}/pipeline"
    owner:      "{{ logstash_user }}"
    group:      "{{ logstash_group }}"
    mode:       "0755"
    remote_src: true

- name: Remove `extras` directory
  file:
    path:  "{{ logstash_dir }}/extras"
    state: absent
####


####
## Create Pipeline configurations
###
- name: Resolving pipelines
  include_tasks: resolve-pipelines.yml
####
